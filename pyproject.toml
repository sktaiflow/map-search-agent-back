[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "map-search-agent-back"
version = "0.1.0"
description = "LangGraph 기반 에이전트 백엔드 서비스"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    # Core dependencies
    "fastapi>=0.115.8,<0.116.0",
    "uvicorn>=0.34.0,<0.35.0",
    "pydantic>=2.10.6,<3.0.0",
    "pydantic-settings>=2.9.1,<3.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    # Database & Vector
    "psycopg2-binary>=2.9.10,<3.0.0",
    "asyncpg>=0.30.0,<1.0.0",
    "pgvector>=0.4.0,<1.0.0",
    "pynamodb==6.0.0",
    # Neo4j & Graph
    "neomodel>=5.4.5,<6.0.0",
    "neo4j>=5.28.1,<6.0.0",
    "py2neo>=2021.2.4,<2022.0.0",
    "langchain-neo4j>=0.4.0,<1.0.0",
    # AI & LangChain
    "langchain>=0.3.26,<0.4.0",
    "langchain-community>=0.3.20,<0.4.0",
    "langchain-openai>=0.3.10,<0.4.0",
    "langchain-core>=0.3.34,<0.4.0",
    "langgraph>=0.3.20,<0.6.0",
    "langgraph-cli[inmem]>=0.3.1,<0.4.0",
    "openai>=1.68.2,<2.0.0",
    "chainlit>=2.4.301,<3.0.0",
    # Data processing
    "numpy>=2.2.4,<3.0.0",
    "pandas>=2.2.3,<3.0.0",
    "pytz>=2025.1,<2026.0",
    # HTTP & Async
    "requests>=2.32.3,<3.0.0",
    "aiohttp>=3.11.12,<4.0.0",
    "httpx>=0.24.0,<1.0.0",
    # AWS & Cloud
    "aioboto3>=13.4.0,<14.0.0",
    # Utilities
    "orjson>=3.10.15,<4.0.0",
    "tenacity>=9.1.2,<10.0.0",
    "tabulate>=0.9.0,<0.10.0",
    "graphviz>=0.20.3,<0.21.0",
    "simplejson>=3.20.1,<4.0.0",
    # Scheduling
    "apscheduler==3.8.0",
    # Observability
    "opentelemetry-api==1.31.1",
    "opentelemetry-sdk==1.31.1",
    "opentelemetry-exporter-otlp==1.31.1",
    "opentelemetry-sdk-extension-aws==2.0.1",
    "opentelemetry-instrumentation-fastapi==0.52b1",
    "opentelemetry-instrumentation-urllib3==0.52b1",
    "opentelemetry-instrumentation-requests==0.52b1",
    "opentelemetry-instrumentation-aiohttp-client==0.52b1",
    "opentelemetry-instrumentation-langchain>=0.44.0,<0.45.0",
    # Dependency injection
    "dependency-injector>=4.45.0,<5.0.0",
    # Research & Document processing
    "gpt-researcher>=0.12.12,<0.13.0",
    "pymupdf==1.24.14",
    # UI & Web
    "gradio>=5.33.1,<6.0.0",
    "gradio-calendar>=0.0.6,<0.0.7",
    "sse-starlette==2.1.3",
    "langgraph-checkpoint-postgres>=2.0.23",
    "langfuse==2.60.7",
    "ddtrace==3.7.1",
    "greenlet>=3.2.4",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0,<26.0.0",
    "flake8>=7.1.2,<8.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.3.0,<4.0.0",
]
test = [
    "pytest>=8.4.1,<9.0.0",
    "pytest-asyncio>=1.0.0,<2.0.0",
    "pytest-mock>=3.14.1,<4.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.0.0,<20.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/map-search-agent-back"
Repository = "https://github.com/yourusername/map-search-agent-back.git"
Issues = "https://github.com/yourusername/map-search-agent-back/issues"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
